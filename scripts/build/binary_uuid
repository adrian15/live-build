#!/bin/sh

## live-build(7) - System Build Scripts
## Copyright (C) 2006-2015 Daniel Baumann <mail@daniel-baumann.ch>
##
## This program comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
## This is free software, and you are welcome to redistribute it
## under certain conditions; see COPYING for details.


set -e

# Including common functions
[ -e "${LIVE_BUILD}/scripts/build.sh" ] && . "${LIVE_BUILD}/scripts/build.sh" || . /usr/lib/live/build.sh

# Setting static variables
DESCRIPTION="$(Echo 'installs uuid into binary')"
HELP=""
USAGE="${PROGRAM} [--force]"

Arguments "${@}"

# Reading configuration files
Read_conffiles config/all config/common config/bootstrap config/chroot config/binary config/source
Set_defaults

# TODO: Add an option to be able to disable this file creation
Echo_message "Begin installing uuid..."

# Requiring stage file
Require_stagefile .build/config .build/bootstrap

# Checking stage file
Check_stagefile .build/binary_uuid

# Checking lock file
Check_lockfile .lock

# Creating lock file
Create_lockfile .lock

LIVEID_DIR_PREFIX='LIVEID'

LB_UUID_SEED="\
${APTITUDE_OPTIONS}\
-\
${APT_OPTIONS}\
-\
${_CONFFILE}\
-\
${_CONFIG}\
-\
${DEBOOTSTRAP_OPTIONS}\
-\
${DEBOOTSTRAP_SCRIPT}\
-\
${GZIP_OPTIONS}\
-\
${LB_APT}\
-\
${LB_APT_FTP_PROXY}\
-\
${LB_APT_HTTP_PROXY}\
-\
${LB_APT_INDICES}\
-\
${LB_APT_PIPELINE}\
-\
${LB_APT_RECOMMENDS}\
-\
${LB_APT_SECURE}\
-\
${LB_APT_SOURCE_ARCHIVES}\
-\
${LB_ARCHITECTURES}\
-\
${LB_ARCHIVE_AREAS}\
-\
${LB_BACKPORTS}\
-\
${LB_BINARY_FILESYSTEM}\
-\
${LB_BOOTAPPEND_INSTALL}\
-\
${LB_BOOTAPPEND_LIVE}\
-\
${LB_BOOTAPPEND_LIVE_FAILSAFE}\
-\
${LB_BOOTLOADERS}\
-\
${LB_BOOTSTRAP_QEMU_ARCHITECTURES}\
-\
${LB_BOOTSTRAP_QEMU_EXCLUDE}\
-\
${LB_BOOTSTRAP_QEMU_STATIC}\
-\
${LB_BUILD_WITH_CHROOT}\
-\
${LB_CACHE}\
-\
${LB_CACHE_INDICES}\
-\
${LB_CACHE_PACKAGES}\
-\
${LB_CACHE_STAGES}\
-\
${LB_CHECKSUMS}\
-\
${LB_CHROOT_FILESYSTEM}\
-\
${LB_COMPRESSION}\
-\
${LB_DEBCONF_FRONTEND}\
-\
${LB_DEBCONF_PRIORITY}\
-\
${LB_DEBIAN_INSTALLER}\
-\
${LB_DEBIAN_INSTALLER_DISTRIBUTION}\
-\
${LB_DEBIAN_INSTALLER_GUI}\
-\
${LB_DEBIAN_INSTALLER_PRESEEDFILE}\
-\
${LB_DISTRIBUTION}\
-\
${LB_FDISK}\
-\
${LB_FIRMWARE_BINARY}\
-\
${LB_FIRMWARE_CHROOT}\
-\
${LB_GRUB_SPLASH}\
-\
${LB_HDD_LABEL}\
-\
${LB_HDD_PARTITION_START}\
-\
${LB_HDD_SIZE}\
-\
${LB_INITRAMFS}\
-\
${LB_INITRAMFS_COMPRESSION}\
-\
${LB_INITSYSTEM}\
-\
${LB_INTERACTIVE}\
-\
${LB_ISO_APPLICATION}\
-\
${LB_ISOHYBRID_OPTIONS}\
-\
${LB_ISO_PREPARER}\
-\
${LB_ISO_PUBLISHER}\
-\
${LB_ISO_VOLUME}\
-\
${LB_JFFS2_ERASEBLOCK}\
-\
${LB_KEYRING_PACKAGES}\
-\
${LB_LINUX_FLAVOURS_WITH_ARCH}\
-\
${LB_LINUX_PACKAGES}\
-\
${LB_LOADLIN}\
-\
${LB_LOSETUP}\
-\
${LB_MEMTEST}\
-\
${LB_MIRROR_BINARY}\
-\
${LB_MIRROR_BINARY_SECURITY}\
-\
${LB_MIRROR_BOOTSTRAP}\
-\
${LB_MIRROR_CHROOT}\
-\
${LB_MIRROR_CHROOT_SECURITY}\
-\
${LB_MIRROR_DEBIAN_INSTALLER}\
-\
${LB_MODE}\
-\
${LB_NET_COW_FILESYSTEM}\
-\
${LB_NET_COW_MOUNTOPTIONS}\
-\
${LB_NET_COW_PATH}\
-\
${LB_NET_COW_SERVER}\
-\
${LB_NET_ROOT_FILESYSTEM}\
-\
${LB_NET_ROOT_MOUNTOPTIONS}\
-\
${LB_NET_ROOT_PATH}\
-\
${LB_NET_ROOT_SERVER}\
-\
${LB_NET_TARBALL}\
-\
${LB_ONIE}\
-\
${LB_ONIE_KERNEL_CMDLINE}\
-\
${LB_PARENT_ARCHIVE_AREAS}\
-\
${LB_PARENT_DEBIAN_INSTALLER_DISTRIBUTION}\
-\
${LB_PARENT_DISTRIBUTION}\
-\
${LB_PARENT_MIRROR_BINARY}\
-\
${LB_PARENT_MIRROR_BINARY_SECURITY}\
-\
${LB_PARENT_MIRROR_BOOTSTRAP}\
-\
${LB_PARENT_MIRROR_CHROOT}\
-\
${LB_PARENT_MIRROR_CHROOT_SECURITY}\
-\
${LB_PARENT_MIRROR_DEBIAN_INSTALLER}\
-\
${LB_SECURITY}\
-\
${LB_SOURCE}\
-\
${LB_SOURCE_IMAGES}\
-\
${LB_SWAP_FILE_PATH}\
-\
${LB_SWAP_FILE_SIZE}\
-\
${LB_SYSTEM}\
-\
${LB_TASKSEL}\
-\
${LB_UEFI_SECURE_BOOT}\
-\
${LB_UPDATES}\
-\
${LB_WIN32_LOADER}\
-\
${LB_ZSYNC}\
-\
${LIVE_IMAGE_NAME}\
-\
${LIVE_IMAGE_TYPE}\
"

LB_UUID=$(echo -n "${LB_UUID_SEED}" | md5sum | tr 'a-z' 'A-Z')

LB_UUID_DIR1="$(echo ${LB_UUID} | cut -c1-8)"
LB_UUID_DIR2="$(echo ${LB_UUID} | cut -c9-16)"
LB_UUID_DIR3="$(echo ${LB_UUID} | cut -c17-24)"
LB_UUID_FILE4="$(echo ${LB_UUID} | cut -c25-32)"

LB_UUID_DIR="${LIVEID_DIR_PREFIX}/${LB_UUID_DIR1}"'/'"${LB_UUID_DIR2}"'/'"${LB_UUID_DIR3}"
LB_UUID_FILE="${LB_UUID_DIR}"'/'"${LB_UUID_FILE4}"

export LB_UUID_FILE

mkdir -p binary/${LB_UUID_DIR}
touch binary/${LB_UUID_FILE}

# Creating stage file
Create_stagefile .build/binary_uuid
